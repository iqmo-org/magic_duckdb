# This is a helper to create a release at the appropriate RC#.
# You can also just tag the release manually

name: Bump Beta X.Y[b|rc|c]

# bumps base version (0.1.1 -> 0.1.2), and appends the next {stage}{revision}
# if no stage, then "b1" is used
# otherwise, {stage}{revision+1}
# Examples:
# v0.1.1 -> v0.1.2b1
# v0.1.2b1 -> v0.1.2b2
# v0.1.2rc1 -> v0.1.2rc3
#
# Important: The "v" prefix is mandatory if you manually tag.
#
# https://peps.python.org/pep-0440/
# Convention:
# b for beta
# rc for release candidate. We don't need to use this.
# c for correction: should be manually tagged post release.

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed for tags for dunamai
          token: ${{ secrets.PATMDG }} # needed to create tag and trigger a new workflow
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get RC Version
        run: |

          pip install --upgrade pip
          pip install --user dunamai

          export RVERSIONBASE=$(dunamai from git --format "{base}" --bump)
          export RVERSIONSTAGE=$(dunamai from git --format "{stage}{revision}" --bump)

          if [ -z $RVERSIONBASE ]
          then
              echo First Release, setting 0.0.0
              export RVERSIONBASE=0.0.0
          fi

          if [ -z $RVERSIONSTAGE ]
          then
              echo First b1, setting b1
              export RVERSIONSTAGE=b1
          fi

          export RVERSION=${RVERSIONBASE}${RVERSIONSTAGE}
          echo $RVERSION

          # store in GITHUB_ENV, to access. Prefix with v
          echo "RVERSION=$RVERSION" >> $GITHUB_ENV

      - name: Create tag
        run: |
          git config user.name "Git Action"
          git config user.email "gitaction@iqmo.com"
          git tag -a v${{ env.RVERSION }} -m "Generated from GH Action"
          git push origin v${{ env.RVERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.PATMDG }}
