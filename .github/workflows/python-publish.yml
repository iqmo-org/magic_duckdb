# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3
        with: # needed for tags for dunamai
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set version with dunamai
        run: |
          #python -m venv env
          #source env/bin/activate
          pip install --upgrade pip
          pip install --user dunamai
          echo __version__=\"`dunamai from git --format "{base}" `\" > magic_duckdb/_version.py
          cat magic_duckdb/_version.py
          git tag
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user pytest
          if [ -f requirements_dev.txt ]; then pip install --user -r requirements_dev.txt; fi
          pip install --user .
      - name: Test with pytest
        run: |
          pytest
      - name: Build
        run: |
          pip wheel --no-deps -w dist .
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
